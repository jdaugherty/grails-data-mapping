dependencies {
    testImplementation project(":grails-datastore-gorm-tck")
}

// We need to test against the TCK. Gradle cannot find/run tests from jars
// without a lot of plumbing, so here we copy the class files from the TCK
// project into this project's test classes dir so Gradle can find the test
// classes and run them. See grails.gorm.tests.GormDatastoreSpec for on the TCK.

// helper, used below.
def toBaseClassRelativePathWithoutExtension = { String base, String classFile ->
    if (classFile.startsWith(base)) {
        def sansClass = classFile[0 .. classFile.size() - ".class".size() - 1]
        def dollarIndex = sansClass.indexOf('$')
        def baseClass = dollarIndex > 0 ? sansClass[0..dollarIndex - 1] : sansClass
        def relative = baseClass - base - '/'
        relative
    }
    else {
        null
    }
}

test.doFirst {
    File tckClassesDir = project(":grails-datastore-gorm-tck").sourceSets.main.output.classesDirs.files.first()
    def thisProjectsTests = // surely there is a less hardcoded way to do this
            copy {
                from tckClassesDir
                into sourceSets.test.output.classesDirs.files.first()
                include "**/*.class"
                exclude { details ->
                    // Do not copy across any TCK class (or nested classes of that class)
                    // If there is a corresponding source file in the particular modules
                    // test source tree. Allows a module to override a test/helper.

                    if (!details.file.isFile()) {
                        return false
                    }
                    def candidatePath = details.file.absolutePath
                    def relativePath = toBaseClassRelativePathWithoutExtension(tckClassesDir.absolutePath, candidatePath)

                    if (relativePath == null) {
                        throw new IllegalStateException("$candidatePath does not appear to be in the TCK")
                    }

                    project.file("src/test/groovy/${relativePath}.groovy").exists()
                }
            }
}

//        Only enable to force snapshot dependency updates due to spring dependency management plugin snapshot caching behavior
//        configurations.all {
//            resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
//        }